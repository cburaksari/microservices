version: "3.8"

services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - eureka-network

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: org.springframework.kafka.support.serializer.JsonSerializer
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_PROPERTIES_VALUE_DESERIALIZER: user.service.demo.config.GenericJsonDeserializer
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "*"
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_USE_TYPE_HEADERS: "false"
      SPRING_KAFKA_PRODUCER_TOPIC: user-topic
    depends_on:
      - eureka-server
      - postgresql
    networks:
      - eureka-network

  product-service:
    build:
      context: ./product-service
    container_name: product-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: product-consumer
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: org.springframework.kafka.support.serializer.JsonSerializer
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_PROPERTIES_VALUE_DESERIALIZER: product.service.demo.config.GenericJsonDeserializer
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "*"
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_USE_TYPE_HEADERS: "false"
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_FAIL_ON_EMPTY_BEANS: "false"
      SPRING_KAFKA_PRODUCER_TOPIC: product-topic
      SPRING_KAFKA_CONSUMER_TOPIC: user-topic
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - postgresql
    networks:
      - eureka-network
  order-service:
    build:
      context: ./order-service
    container_name: order-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: order-consumer
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: org.springframework.kafka.support.serializer.JsonSerializer
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_PROPERTIES_VALUE_DESERIALIZER: main.java.order.service.infrastructure.config.GenericJsonDeserializer
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "*"
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_USE_TYPE_HEADERS: "false"
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_FAIL_ON_EMPTY_BEANS: "false"
      SPRING_KAFKA_PRODUCER_TOPIC: order-topic
      SPRING_KAFKA_CONSUMER_TOPIC: product-topic
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - postgresql
    networks:
      - eureka-network
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    depends_on:
      - eureka-server
    ports:
      - "8080:8080"
    networks:
      - eureka-network
  postgresql:
    image: postgres:13
    container_name: postgresql
    environment:
      POSTGRES_USER: burak
      POSTGRES_PASSWORD: 1
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - eureka-network
  zookeeper:
    container_name: zookeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - eureka-network
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENER=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_LISTENER_NAME=PLAINTEXT
      - KAFKA_LISTENER_PORT=9092
      - KAFKA_ADVERTISED_HOST_NAME=kafka
    ports:
      - "9092:9092"
    networks:
      - eureka-network

networks:
  eureka-network:
    driver: bridge
volumes:
  postgresql-data:
